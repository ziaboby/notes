{"version":3,"sources":["constants/actions.js","constants/common.js","utils/controllerNotes.js","utils/getEnvMode.js","utils/logger.js","utils/personalNotesStorage.js","reducers/notes.js","utils/fetchRequest.js","layout/elements/InputArea.js","layout/elements/Button.js","layout/containers/InsertNote.js","utils/submitOnEnterHook.js","layout/elements/Avatar.js","layout/elements/Label.js","layout/elements/Timestamp.js","layout/elements/BubbleText.js","layout/elements/Note.js","layout/containers/App.js","index.js"],"names":["LOAD_NOTES_FROM_FETCH","ADD_NOTE","LOCAL_STORAGE_KEY","getNewId","aIds","Math","max","sortNotesByPubDateAsc","objNotes","extractHoursAndMinutes","time","split","slice","sort","a","b","aDate","Date","pubDate","bDate","pubTime","aHours","aMinutes","bHours","bMinutes","setHours","setMinutes","map","id","getEnvironmentMode","process","NODE_ENV","console","error","STORAGE","localStorage","getItem","item","setItem","e","logger","getSavedPersonalNotes","notesStoredInBrowserStorage","JSON","parse","savePersonalNote","objNewNote","currentStoreState","stringify","initialState","orderedNotesIds","Object","keys","length","notesById","Reducer","state","action","type","newNote","assign","payload","objNote","fetchedNotedById","aNotes","reduce","prev","curr","request","fetch","response","ok","Error","toString","json","body","InputArea","extraClassNamesSpaceSeparated","required","placeholderTxt","onChangeCb","value","className","placeholder","aria-placeholder","aria-multiline","role","onChange","Button","onClickCb","disabled","children","onClick","InsertNote","addNoteCb","useState","setValue","useCallback","event","target","currValue","tmpValue","matches","toLocaleString","match","name","photoUrl","replace","content","ref","submitCb","useRef","listenerCb","key","preventDefault","useEffect","current","addEventListener","refCurrent","removeEventListener","submitOnEnterHook","Avatar","altText","imageURL","titleText","src","alt","title","Label","Timestamp","BubbleText","isReadMoreVisible","showReadMore","isReadingMore","readMore","clientHeight","scrollHeight","Notes","isTheLastInTheList","scrollIntoView","App","useReducer","dispatch","fetchRequest","headers","Accept","then","result","catch","noteId","index","currentNote","isCurrentUser","window","history","scrollRestoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35e76eb2.chunk.js","sourcesContent":["export const LOAD_DATA = 'LOAD_DATA';\r\nexport const LOAD_NOTES_FROM_FETCH = 'LOAD_NOTES_FROM_FETCH';\r\nexport const ADD_NOTE = 'ADD_NOTE';\r\n","export const PICSUM_BASE_URL = 'https://picsum.photos/id/%ID%/40/40';\r\nexport const CURRENT_USER_PICSUM_ID = 669;\r\nexport const CURRENT_USER_NAME = 'You';\r\nexport const LOCAL_STORAGE_KEY = 'notes';\r\nexport const LOCAL_STORAGE_KEY_SINGLE_NOTE = 'single-note';\r\nexport const DATA_URL = '/data.json';\r\n","import { LOCAL_STORAGE_KEY } from '../constants/common';\r\n\r\n/**\r\n * Calculate the identifier greater than the maximum currently used\r\n * @param {array} aIds - list of the ids of the listed notes\r\n * @return number\r\n */\r\nexport const getNewId = aIds => Math.max(...aIds) + 1;\r\n\r\n/**\r\n * Sort notes ids based on their pubblication date and time in ascending order\r\n * @param {array} aIds - list of the ids of the listed notes\r\n * @param {object} objNotes - record of note object organized by their id\r\n * @param {number|string} objNotes[].id - note id\r\n * @param {string} objNotes[].name - note author\r\n * @param {string} objNotes[].pubDate - note publication date\r\n * @param {string} objNotes[].pubTime - note pubbication time\r\n * @param {string} objNotes[].content - note content\r\n * @return {array}\r\n */\r\nexport const sortNotesByPubDateAsc = (aIds, objNotes) => {\r\n    /**\r\n     * Get hours and minutes from a string by returing those respectively in the first and the second position of an array\r\n     * @param {string} time\r\n     * @example 11:00 or 1:00\r\n     * @return {array}\r\n     */\r\n    const extractHoursAndMinutes = time => time.split(':');\r\n\r\n    return aIds\r\n        .slice(0)\r\n        .sort((a, b) => {\r\n            const aDate = new Date(objNotes[a].pubDate),\r\n                bDate = new Date(objNotes[b].pubDate),\r\n                [aHours, aMinutes] = extractHoursAndMinutes(objNotes[a].pubTime),\r\n                [bHours, bMinutes] = extractHoursAndMinutes(objNotes[b].pubTime);\r\n            aDate.setHours(aHours);\r\n            aDate.setMinutes(aMinutes);\r\n            bDate.setHours(bHours);\r\n            bDate.setMinutes(bMinutes);\r\n\r\n            return aDate - bDate;\r\n        })\r\n        .map(id => +id);\r\n};\r\n","/**\r\n * Utilities functions to detect current environment mode\r\n */\r\n\r\nexport const isDevelopmentMode = () =>\r\n    !getEnvironmentMode() || getEnvironmentMode() === 'development';\r\n\r\nexport const isProductionMode = () =>\r\n    !getEnvironmentMode() || getEnvironmentMode() === 'production';\r\n\r\nconst getEnvironmentMode = () => (process.env || {}).NODE_ENV;\r\n\r\nexport default getEnvironmentMode;\r\n","/**\r\n * Basic utilities functions to log most used level of information\r\n */\r\n\r\nimport { isProductionMode } from './getEnvMode';\r\n\r\nconst isProduction = isProductionMode();\r\n\r\nexport default {\r\n    log: (...params) => {\r\n        if (!isProduction) {\r\n            console.log(...params);\r\n        }\r\n    },\r\n    error: (...params) => {\r\n        console.error(...params);\r\n    },\r\n};\r\n","import { LOCAL_STORAGE_KEY } from '../constants/common';\r\nimport logger from './logger';\r\n\r\n/**\r\n * Utilities object to handle storage, encapsule the used technology allowing future changes\r\n */\r\nconst STORAGE = {\r\n    getItem: () => {\r\n        return localStorage.getItem(LOCAL_STORAGE_KEY);\r\n    },\r\n    setItem: item => {\r\n        try {\r\n            localStorage.setItem(LOCAL_STORAGE_KEY, item);\r\n        } catch (e) {\r\n            logger.error(e);\r\n        }\r\n    },\r\n};\r\n\r\n/**\r\n * Retrive notes objects stored in the chosen browser storage\r\n * @return {object}\r\n */\r\nexport const getSavedPersonalNotes = () => {\r\n    const notesStoredInBrowserStorage = STORAGE.getItem();\r\n    return notesStoredInBrowserStorage ? JSON.parse(notesStoredInBrowserStorage) : {};\r\n};\r\n\r\n/**\r\n * Update the browser storage with the a new personal note\r\n * @param {object} objNewNote\r\n * @param {number|string} objNewNote.id - note id\r\n * @param {string} objNewNote.name - note author\r\n * @param {string} objNewNote.pubDate - note publication date\r\n * @param {string} objNewNote.pubTime - note pubbication time\r\n * @param {string} objNewNote.content - note content\r\n */\r\nexport const savePersonalNote = objNewNote => {\r\n    const currentStoreState = getSavedPersonalNotes();\r\n    STORAGE.setItem(JSON.stringify({ ...currentStoreState, ...objNewNote }));\r\n};\r\n","import { ADD_NOTE, LOAD_NOTES_FROM_FETCH } from '../constants/actions';\r\nimport { getNewId, sortNotesByPubDateAsc } from '../utils/controllerNotes';\r\nimport logger from '../utils/logger';\r\nimport { getSavedPersonalNotes, savePersonalNote } from '../utils/personalNotesStorage';\r\n\r\nconst notesStoredInBrowserStorage = getSavedPersonalNotes();\r\n\r\nexport const initialState = {\r\n    orderedNotesIds: Object.keys(notesStoredInBrowserStorage).length\r\n        ? sortNotesByPubDateAsc(\r\n              Object.keys(notesStoredInBrowserStorage),\r\n              notesStoredInBrowserStorage\r\n          )\r\n        : [],\r\n    notesById: notesStoredInBrowserStorage,\r\n};\r\n\r\nconst Reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_NOTE: {\r\n            const id = getNewId(state.orderedNotesIds),\r\n                newNote = { [id]: Object.assign({}, action.payload.objNote, { id }) };\r\n            savePersonalNote(newNote);\r\n            return {\r\n                ...state,\r\n                notesById: Object.assign({}, state.notesById, newNote),\r\n                orderedNotesIds: [...state.orderedNotesIds, id],\r\n            };\r\n        }\r\n        case LOAD_NOTES_FROM_FETCH: {\r\n            const fetchedNotedById = (action.payload.aNotes || []).reduce(\r\n                (prev, curr) => ({\r\n                    ...prev,\r\n                    [curr.id]: Object.assign({}, curr),\r\n                }),\r\n                state.notesById\r\n            );\r\n            return {\r\n                ...state,\r\n                notesById: fetchedNotedById,\r\n                orderedNotesIds: sortNotesByPubDateAsc(\r\n                    Object.keys(fetchedNotedById),\r\n                    fetchedNotedById\r\n                ),\r\n            };\r\n        }\r\n        default: {\r\n            logger.error('Error - Unexpected action');\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport default Reducer;\r\n","/**\r\n * Fetch data based on the input request\r\n * @param {object|string} request - HTTP request, with both URL and options, or more simply the URL for a get request\r\n * @return {Promise}\r\n */\r\nexport async function fetchRequest(request) {\r\n    const response = await fetch(request);\r\n\r\n    if (!response.ok) {\r\n        throw new Error('Error while fetching the request ' + request.toString());\r\n    }\r\n\r\n    try {\r\n        const body = await response.json();\r\n        return body;\r\n    } catch (e) {\r\n        throw new Error('Error with the response from the request ' + request.toString());\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './InputArea.scss';\r\n\r\nconst InputArea = ({\r\n    extraClassNamesSpaceSeparated,\r\n    required,\r\n    placeholderTxt,\r\n    onChangeCb,\r\n    value = '',\r\n}) => {\r\n    return (\r\n        <textarea\r\n            className={'input-area ' + (extraClassNamesSpaceSeparated || '')}\r\n            value={value}\r\n            placeholder={placeholderTxt}\r\n            aria-placeholder={placeholderTxt}\r\n            aria-multiline='true'\r\n            role='textbox'\r\n            required={required ? 'required' : ''}\r\n            onChange={onChangeCb}\r\n        />\r\n    );\r\n};\r\n\r\nexport default InputArea;\r\n","import React from 'react';\r\nimport './Button.scss';\r\n\r\nconst Button = ({ extraClassNamesSpaceSeparated, onClickCb, disabled = false, children }) => (\r\n    <button\r\n        className={'btn ' + (extraClassNamesSpaceSeparated || '')}\r\n        onClick={onClickCb}\r\n        role='button'\r\n        disabled={disabled ? 'disabled' : ''}\r\n    >\r\n        {children}\r\n    </button>\r\n);\r\n\r\nexport default Button;\r\n","import React, { useCallback, useState } from 'react';\r\nimport InputArea from '../elements/InputArea';\r\nimport Button from '../elements/Button';\r\nimport { CURRENT_USER_PICSUM_ID, CURRENT_USER_NAME, PICSUM_BASE_URL } from '../../constants/common';\r\nimport submitOnEnterHook from '../../utils/submitOnEnterHook';\r\nimport './InsertNote.scss';\r\n\r\nconst InsertNote = ({ addNoteCb }) => {\r\n    const [value, setValue] = useState('');\r\n\r\n    const onChangeCb = useCallback(\r\n        event => {\r\n            setValue(event.target.value || '');\r\n        },\r\n        [setValue]\r\n    );\r\n\r\n    const onClickCb = useCallback(\r\n        currValue => {\r\n            const tmpValue = typeof currValue === 'string' ? currValue : value;\r\n            if (tmpValue) {\r\n                const stringDate = new Date().toLocaleString(),\r\n                    matches = stringDate.match(\r\n                        /(\\d{1,2})\\/(\\d{1,2})\\/(\\d{4})\\D*(\\d{1,2}):(\\d{1,2})/\r\n                    ),\r\n                    objNote = {\r\n                        name: CURRENT_USER_NAME,\r\n                        photoUrl: PICSUM_BASE_URL.replace('%ID%', CURRENT_USER_PICSUM_ID),\r\n                        content: tmpValue,\r\n                        pubDate: matches ? `${matches[2]}/${matches[1]}/${matches[3]}` : '',\r\n                        pubTime: matches ? `${matches[4]}:${matches[5]}` : '',\r\n                    };\r\n\r\n                addNoteCb(objNote);\r\n                setValue('');\r\n            }\r\n        },\r\n        [value, addNoteCb, setValue]\r\n    );\r\n\r\n    const ref = submitOnEnterHook(onClickCb);\r\n\r\n    return (\r\n        <section className='insert' ref={ref}>\r\n            <InputArea\r\n                extraClassNamesSpaceSeparated={'insert-input'}\r\n                placeholderTxt={'Enter note about the process'}\r\n                required={true}\r\n                onChangeCb={onChangeCb}\r\n                value={value}\r\n            />\r\n            <div className='insert-btn-container'>\r\n                <Button\r\n                    extraClassNamesSpaceSeparated={'insert-btn'}\r\n                    onClickCb={onClickCb}\r\n                    disabled={!value}\r\n                >\r\n                    Publish\r\n                </Button>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default InsertNote;\r\n","import React, { useCallback, useEffect, useRef } from 'react';\r\n\r\n/**\r\n * Hook to enable submit data when pressing 'Enter' in the keyboard\r\n * @param {function} submitCb - function to be called when user press an 'Enter' key\r\n * @returns {object} React ref which need to be attached to the interested area\r\n */\r\nexport default submitCb => {\r\n    const ref = useRef();\r\n\r\n    const listenerCb = useCallback(event => {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            submitCb(event.target.value);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        ref.current.addEventListener('keydown', listenerCb);\r\n        const refCurrent = ref.current;\r\n        return () => {\r\n            refCurrent.removeEventListener('keydown', listenerCb);\r\n        };\r\n    }, []);\r\n\r\n    return ref;\r\n};\r\n","import React from 'react';\r\nimport './Avatar.scss';\r\n\r\nconst Avatar = ({ altText, extraClassNamesSpaceSeparated, imageURL, titleText }) => (\r\n    <div className={'avatar ' + (extraClassNamesSpaceSeparated || '')}>\r\n        <img src={imageURL} alt={altText} title={titleText} />\r\n    </div>\r\n);\r\n\r\nexport default Avatar;\r\n","import React from 'react';\r\nimport './Label.scss';\r\n\r\nconst Label = ({ extraClassNamesSpaceSeparated, children }) => (\r\n    <div className={'label ' + (extraClassNamesSpaceSeparated || '')}>{children}</div>\r\n);\r\n\r\nexport default Label;\r\n","import React from 'react';\r\nimport './Timestamp.scss';\r\n\r\nconst Timestamp = ({ extraClassNamesSpaceSeparated, children }) => (\r\n    <div className={'timestamp ' + (extraClassNamesSpaceSeparated || '')}>{children}</div>\r\n);\r\n\r\nexport default Timestamp;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport './BubbleText.scss';\r\n\r\nconst BubbleText = ({ extraClassNamesSpaceSeparated, children }) => {\r\n    const ref = useRef();\r\n\r\n    const [isReadMoreVisible, showReadMore] = useState(false),\r\n        [isReadingMore, readMore] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (ref.current.clientHeight < ref.current.scrollHeight) {\r\n            showReadMore(true);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className={'bubble ' + (extraClassNamesSpaceSeparated || '')}>\r\n            <div className='bubble-tail' />\r\n            <div\r\n                className={'bubble-content' + (isReadingMore ? ' bubble-content--visible' : '')}\r\n                ref={ref}\r\n            >\r\n                {children}\r\n                {(isReadMoreVisible && (\r\n                    <div className='bubble-readmore' onClick={() => readMore(prev => !prev)}>\r\n                        {'Read ' + (isReadingMore ? 'Less' : 'More')}\r\n                    </div>\r\n                )) ||\r\n                    null}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BubbleText;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport Avatar from './Avatar';\r\nimport Label from './Label';\r\nimport Timestamp from './Timestamp';\r\nimport BubbleText from './BubbleText';\r\n\r\nimport './Note.scss';\r\n\r\nconst Notes = ({\r\n    extraClassNamesSpaceSeparated,\r\n    name,\r\n    photoUrl,\r\n    pubDate,\r\n    pubTime,\r\n    content,\r\n    isTheLastInTheList,\r\n}) => {\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        // this code needs to be execute on each render to position it in the viewport in case old notes are loaded\r\n        isTheLastInTheList && ref.current.scrollIntoView();\r\n    });\r\n\r\n    return (\r\n        <div className={'note ' + (extraClassNamesSpaceSeparated || '')}>\r\n            <Avatar\r\n                altText={name}\r\n                extraClassNamesSpaceSeparated={'note-avatar'}\r\n                imageURL={photoUrl}\r\n                titleText={name}\r\n            />\r\n            <Label extraClassNamesSpaceSeparated={'note-label'}>{name}</Label>\r\n            <Timestamp extraClassNamesSpaceSeparated={'note-timestamp'}>\r\n                {pubDate + ' - ' + pubTime}\r\n            </Timestamp>\r\n            <BubbleText extraClassNamesSpaceSeparated={'note-bubble'}>{content}</BubbleText>\r\n            <div className='note-scrollref' ref={ref} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notes;\r\n","import React, { useCallback, useEffect, useReducer } from 'react';\r\nimport { LOAD_NOTES_FROM_FETCH, ADD_NOTE } from '../../constants/actions';\r\nimport { CURRENT_USER_NAME, DATA_URL } from '../../constants/common';\r\nimport Reducer, { initialState } from '../../reducers/notes';\r\nimport { fetchRequest } from '../../utils/fetchRequest';\r\nimport logger from '../../utils/logger';\r\nimport InsertNote from './InsertNote';\r\nimport Note from '../elements/Note';\r\n\r\nimport './App.scss';\r\n\r\nconst App = () => {\r\n    const [{ orderedNotesIds, notesById }, dispatch] = useReducer(Reducer, initialState);\r\n\r\n    const addNoteCb = useCallback(\r\n        objNote => {\r\n            dispatch({\r\n                type: ADD_NOTE,\r\n                payload: {\r\n                    objNote,\r\n                },\r\n            });\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        fetchRequest(process.env.PUBLIC_URL + DATA_URL, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n            },\r\n        })\r\n            .then(result => {\r\n                // logger.log(result);\r\n                dispatch({\r\n                    type: LOAD_NOTES_FROM_FETCH,\r\n                    payload: {\r\n                        aNotes: result.slice(0),\r\n                    },\r\n                });\r\n            })\r\n            .catch(e => logger.error(e));\r\n    }, []);\r\n\r\n    return (\r\n        <div className='app'>\r\n            <section className='notes-list'>\r\n                {orderedNotesIds.map((noteId, index) => {\r\n                    const currentNote = notesById[noteId],\r\n                        isCurrentUser = currentNote.name === CURRENT_USER_NAME,\r\n                        isTheLastInTheList = index === orderedNotesIds.length - 1;\r\n\r\n                    return (\r\n                        <Note\r\n                            key={noteId}\r\n                            extraClassNamesSpaceSeparated={\r\n                                isCurrentUser ? 'note--right' : 'note--left'\r\n                            }\r\n                            name={currentNote.name}\r\n                            photoUrl={currentNote.photoUrl}\r\n                            pubDate={currentNote.pubDate}\r\n                            pubTime={currentNote.pubTime}\r\n                            content={currentNote.content}\r\n                            isTheLastInTheList={isTheLastInTheList}\r\n                        />\r\n                    );\r\n                })}\r\n            </section>\r\n            <InsertNote addNoteCb={addNoteCb} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './layout/containers/App';\r\n\r\nif (((window || {}).history || {}).scrollRestoration) {\r\n    window.history.scrollRestoration = 'manual';\r\n}\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}