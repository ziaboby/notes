{"version":3,"sources":["constants/actions.js","constants/common.js","utils/controllerNotes.js","utils/getEnvMode.js","utils/logger.js","utils/personalNotesStorage.js","reducers/notes.js","utils/fetchRequest.js","layout/elements/InputArea.js","layout/elements/Button.js","layout/containers/InsertNote.js","utils/submitOnEnterHook.js","layout/elements/Avatar.js","layout/elements/Label.js","layout/elements/Timestamp.js","layout/elements/BubbleText.js","layout/elements/Note.js","layout/containers/App.js","index.js"],"names":["LOAD_NOTES_FROM_FETCH","ADD_NOTE","LOCAL_STORAGE_KEY","getNewId","aIds","Math","max","sortNotesByPubDateAsc","objNotes","extractHoursAndMinutes","time","split","slice","sort","a","b","aDate","Date","pubDate","bDate","pubTime","aHours","aMinutes","bHours","bMinutes","setHours","setMinutes","map","id","getEnvironmentMode","process","NODE_ENV","console","error","STORAGE","localStorage","getItem","item","setItem","e","logger","getSavedPersonalNotes","notesStoredInBrowserStorage","JSON","parse","savePersonalNote","objNewNote","currentStoreState","stringify","initialState","orderedNotesIds","Object","keys","length","notesById","Reducer","state","action","type","newNote","assign","payload","objNote","fetchedNotedById","aNotes","reduce","prev","curr","request","fetch","response","ok","Error","toString","json","body","InputArea","extraClassNamesSpaceSeparated","required","placeholderTxt","onChangeCb","value","className","placeholder","aria-placeholder","aria-multiline","role","onChange","Button","onClickCb","disabled","children","onClick","InsertNote","addNoteCb","useState","setValue","useCallback","event","target","currValue","tmpValue","matches","toLocaleString","match","name","photoUrl","replace","content","ref","submitCb","useRef","listenerCb","key","preventDefault","useEffect","current","addEventListener","refCurrent","removeEventListener","submitOnEnterHook","Avatar","altText","imageURL","titleText","src","alt","title","Label","Timestamp","BubbleText","isReadMoreVisible","showReadMore","isReadingMore","readMore","clientHeight","scrollHeight","Notes","isTheLastInTheList","scrollIntoView","App","useReducer","dispatch","fetchRequest","then","result","catch","noteId","index","currentNote","isCurrentUser","window","history","scrollRestoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c22f6702.chunk.js","sourcesContent":["export const LOAD_DATA = 'LOAD_DATA';\nexport const LOAD_NOTES_FROM_FETCH = 'LOAD_NOTES_FROM_FETCH';\nexport const ADD_NOTE = 'ADD_NOTE';\n","export const PICSUM_BASE_URL = 'https://picsum.photos/id/%ID%/40/40';\nexport const CURRENT_USER_PICSUM_ID = 669;\nexport const CURRENT_USER_NAME = 'You';\nexport const LOCAL_STORAGE_KEY = 'notes';\nexport const LOCAL_STORAGE_KEY_SINGLE_NOTE = 'single-note';\nexport const DATA_URL = '/data.json';\n","import { LOCAL_STORAGE_KEY } from '../constants/common';\n\n/**\n * Calculate the identifier greater than the maximum currently used\n * @param {array} aIds - list of the ids of the listed notes\n * @return number\n */\nexport const getNewId = aIds => Math.max(...aIds) + 1;\n\n/**\n * Sort notes ids based on their pubblication date and time in ascending order\n * @param {array} aIds - list of the ids of the listed notes\n * @param {object} objNotes - record of note object organized by their id\n * @param {number|string} objNotes[].id - note id\n * @param {string} objNotes[].name - note author\n * @param {string} objNotes[].pubDate - note publication date\n * @param {string} objNotes[].pubTime - note pubbication time\n * @param {string} objNotes[].content - note content\n * @return {array}\n */\nexport const sortNotesByPubDateAsc = (aIds, objNotes) => {\n    /**\n     * Get hours and minutes from a string by returing those respectively in the first and the second position of an array\n     * @param {string} time\n     * @example 11:00 or 1:00\n     * @return {array}\n     */\n    const extractHoursAndMinutes = time => time.split(':');\n\n    return aIds\n        .slice(0)\n        .sort((a, b) => {\n            const aDate = new Date(objNotes[a].pubDate),\n                bDate = new Date(objNotes[b].pubDate),\n                [aHours, aMinutes] = extractHoursAndMinutes(objNotes[a].pubTime),\n                [bHours, bMinutes] = extractHoursAndMinutes(objNotes[b].pubTime);\n            aDate.setHours(aHours);\n            aDate.setMinutes(aMinutes);\n            bDate.setHours(bHours);\n            bDate.setMinutes(bMinutes);\n\n            return aDate - bDate;\n        })\n        .map(id => +id);\n};\n","/**\n * Utilities functions to detect current environment mode\n */\n\nexport const isDevelopmentMode = () =>\n    !getEnvironmentMode() || getEnvironmentMode() === 'development';\n\nexport const isProductionMode = () =>\n    !getEnvironmentMode() || getEnvironmentMode() === 'production';\n\nconst getEnvironmentMode = () => (process.env || {}).NODE_ENV;\n\nexport default getEnvironmentMode;\n","/**\n * Basic utilities functions to log most used level of information\n */\n\nimport { isProductionMode } from './getEnvMode';\n\nconst isProduction = isProductionMode();\n\nexport default {\n    log: (...params) => {\n        if (!isProduction) {\n            console.log(...params);\n        }\n    },\n    error: (...params) => {\n        console.error(...params);\n    },\n};\n","import { LOCAL_STORAGE_KEY } from '../constants/common';\nimport logger from './logger';\n\n/**\n * Utilities object to handle storage, encapsule the used technology allowing future changes\n */\nconst STORAGE = {\n    getItem: () => {\n        return localStorage.getItem(LOCAL_STORAGE_KEY);\n    },\n    setItem: item => {\n        try {\n            localStorage.setItem(LOCAL_STORAGE_KEY, item);\n        } catch (e) {\n            logger.error(e);\n        }\n    },\n};\n\n/**\n * Retrive notes objects stored in the chosen browser storage\n * @return {object}\n */\nexport const getSavedPersonalNotes = () => {\n    const notesStoredInBrowserStorage = STORAGE.getItem();\n    return notesStoredInBrowserStorage ? JSON.parse(notesStoredInBrowserStorage) : {};\n};\n\n/**\n * Update the browser storage with the a new personal note\n * @param {object} objNewNote\n * @param {number|string} objNewNote.id - note id\n * @param {string} objNewNote.name - note author\n * @param {string} objNewNote.pubDate - note publication date\n * @param {string} objNewNote.pubTime - note pubbication time\n * @param {string} objNewNote.content - note content\n */\nexport const savePersonalNote = objNewNote => {\n    const currentStoreState = getSavedPersonalNotes();\n    STORAGE.setItem(JSON.stringify({ ...currentStoreState, ...objNewNote }));\n};\n","import { ADD_NOTE, LOAD_NOTES_FROM_FETCH } from '../constants/actions';\nimport { getNewId, sortNotesByPubDateAsc } from '../utils/controllerNotes';\nimport logger from '../utils/logger';\nimport { getSavedPersonalNotes, savePersonalNote } from '../utils/personalNotesStorage';\n\nconst notesStoredInBrowserStorage = getSavedPersonalNotes();\n\nexport const initialState = {\n    orderedNotesIds: Object.keys(notesStoredInBrowserStorage).length\n        ? sortNotesByPubDateAsc(\n              Object.keys(notesStoredInBrowserStorage),\n              notesStoredInBrowserStorage\n          )\n        : [],\n    notesById: notesStoredInBrowserStorage,\n};\n\nconst Reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_NOTE: {\n            const id = getNewId(state.orderedNotesIds),\n                newNote = { [id]: Object.assign({}, action.payload.objNote, { id }) };\n            savePersonalNote(newNote);\n            return {\n                ...state,\n                notesById: Object.assign({}, state.notesById, newNote),\n                orderedNotesIds: [...state.orderedNotesIds, id],\n            };\n        }\n        case LOAD_NOTES_FROM_FETCH: {\n            const fetchedNotedById = (action.payload.aNotes || []).reduce(\n                (prev, curr) => ({\n                    ...prev,\n                    [curr.id]: Object.assign({}, curr),\n                }),\n                state.notesById\n            );\n            return {\n                ...state,\n                notesById: fetchedNotedById,\n                orderedNotesIds: sortNotesByPubDateAsc(\n                    Object.keys(fetchedNotedById),\n                    fetchedNotedById\n                ),\n            };\n        }\n        default: {\n            logger.error('Error - Unexpected action');\n            return state;\n        }\n    }\n};\n\nexport default Reducer;\n","/**\n * Fetch data based on the input request\n * @param {object|string} request - HTTP request, with both URL and options, or more simply the URL for a get request\n * @return {Promise}\n */\nexport async function fetchRequest(request) {\n    const response = await fetch(request);\n\n    if (!response.ok) {\n        throw new Error('Error while fetching the request ' + request.toString());\n    }\n\n    try {\n        const body = await response.json();\n        return body;\n    } catch (e) {\n        throw new Error('Error with the response from the request ' + request.toString());\n    }\n}\n","import React from 'react';\nimport './InputArea.scss';\n\nconst InputArea = ({\n    extraClassNamesSpaceSeparated,\n    required,\n    placeholderTxt,\n    onChangeCb,\n    value = '',\n}) => {\n    return (\n        <textarea\n            className={'input-area ' + (extraClassNamesSpaceSeparated || '')}\n            value={value}\n            placeholder={placeholderTxt}\n            aria-placeholder={placeholderTxt}\n            aria-multiline='true'\n            role='textbox'\n            required={required ? 'required' : ''}\n            onChange={onChangeCb}\n        />\n    );\n};\n\nexport default InputArea;\n","import React from 'react';\nimport './Button.scss';\n\nconst Button = ({ extraClassNamesSpaceSeparated, onClickCb, disabled = false, children }) => (\n    <button\n        className={'btn ' + (extraClassNamesSpaceSeparated || '')}\n        onClick={onClickCb}\n        role='button'\n        disabled={disabled ? 'disabled' : ''}\n    >\n        {children}\n    </button>\n);\n\nexport default Button;\n","import React, { useCallback, useState } from 'react';\nimport InputArea from '../elements/InputArea';\nimport Button from '../elements/Button';\nimport { CURRENT_USER_PICSUM_ID, CURRENT_USER_NAME, PICSUM_BASE_URL } from '../../constants/common';\nimport submitOnEnterHook from '../../utils/submitOnEnterHook';\nimport './InsertNote.scss';\n\nconst InsertNote = ({ addNoteCb }) => {\n    const [value, setValue] = useState('');\n\n    const onChangeCb = useCallback(\n        event => {\n            setValue(event.target.value || '');\n        },\n        [setValue]\n    );\n\n    const onClickCb = useCallback(\n        currValue => {\n            const tmpValue = typeof currValue === 'string' ? currValue : value;\n            if (tmpValue) {\n                const stringDate = new Date().toLocaleString(),\n                    matches = stringDate.match(\n                        /(\\d{1,2})\\/(\\d{1,2})\\/(\\d{4})\\D*(\\d{1,2}):(\\d{1,2})/\n                    ),\n                    objNote = {\n                        name: CURRENT_USER_NAME,\n                        photoUrl: PICSUM_BASE_URL.replace('%ID%', CURRENT_USER_PICSUM_ID),\n                        content: tmpValue,\n                        pubDate: matches ? `${matches[2]}/${matches[1]}/${matches[3]}` : '',\n                        pubTime: matches ? `${matches[4]}:${matches[5]}` : '',\n                    };\n\n                addNoteCb(objNote);\n                setValue('');\n            }\n        },\n        [value, addNoteCb, setValue]\n    );\n\n    const ref = submitOnEnterHook(onClickCb);\n\n    return (\n        <section className='insert' ref={ref}>\n            <InputArea\n                extraClassNamesSpaceSeparated={'insert-input'}\n                placeholderTxt={'Enter note about the process'}\n                required={true}\n                onChangeCb={onChangeCb}\n                value={value}\n            />\n            <div className='insert-btn-container'>\n                <Button\n                    extraClassNamesSpaceSeparated={'insert-btn'}\n                    onClickCb={onClickCb}\n                    disabled={!value}\n                >\n                    Publish\n                </Button>\n            </div>\n        </section>\n    );\n};\n\nexport default InsertNote;\n","import React, { useCallback, useEffect, useRef } from 'react';\n\n/**\n * Hook to enable submit data when pressing 'Enter' in the keyboard\n * @param {function} submitCb - function to be called when user press an 'Enter' key\n * @returns {object} React ref which need to be attached to the interested area\n */\nexport default submitCb => {\n    const ref = useRef();\n\n    const listenerCb = useCallback(event => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            submitCb(event.target.value);\n        }\n    }, []);\n\n    useEffect(() => {\n        ref.current.addEventListener('keydown', listenerCb);\n        const refCurrent = ref.current;\n        return () => {\n            refCurrent.removeEventListener('keydown', listenerCb);\n        };\n    }, []);\n\n    return ref;\n};\n","import React from 'react';\nimport './Avatar.scss';\n\nconst Avatar = ({ altText, extraClassNamesSpaceSeparated, imageURL, titleText }) => (\n    <div className={'avatar ' + (extraClassNamesSpaceSeparated || '')}>\n        <img src={imageURL} alt={altText} title={titleText} />\n    </div>\n);\n\nexport default Avatar;\n","import React from 'react';\nimport './Label.scss';\n\nconst Label = ({ extraClassNamesSpaceSeparated, children }) => (\n    <div className={'label ' + (extraClassNamesSpaceSeparated || '')}>{children}</div>\n);\n\nexport default Label;\n","import React from 'react';\nimport './Timestamp.scss';\n\nconst Timestamp = ({ extraClassNamesSpaceSeparated, children }) => (\n    <div className={'timestamp ' + (extraClassNamesSpaceSeparated || '')}>{children}</div>\n);\n\nexport default Timestamp;\n","import React, { useEffect, useRef, useState } from 'react';\nimport './BubbleText.scss';\n\nconst BubbleText = ({ extraClassNamesSpaceSeparated, children }) => {\n    const ref = useRef();\n\n    const [isReadMoreVisible, showReadMore] = useState(false),\n        [isReadingMore, readMore] = useState(false);\n\n    useEffect(() => {\n        if (ref.current.clientHeight < ref.current.scrollHeight) {\n            showReadMore(true);\n        }\n    }, []);\n\n    return (\n        <div className={'bubble ' + (extraClassNamesSpaceSeparated || '')}>\n            <div className='bubble-tail' />\n            <div\n                className={'bubble-content' + (isReadingMore ? ' bubble-content--visible' : '')}\n                ref={ref}\n            >\n                {children}\n                {(isReadMoreVisible && (\n                    <div className='bubble-readmore' onClick={() => readMore(prev => !prev)}>\n                        {'Read ' + (isReadingMore ? 'Less' : 'More')}\n                    </div>\n                )) ||\n                    null}\n            </div>\n        </div>\n    );\n};\n\nexport default BubbleText;\n","import React, { useEffect, useRef } from 'react';\nimport Avatar from './Avatar';\nimport Label from './Label';\nimport Timestamp from './Timestamp';\nimport BubbleText from './BubbleText';\n\nimport './Note.scss';\n\nconst Notes = ({\n    extraClassNamesSpaceSeparated,\n    name,\n    photoUrl,\n    pubDate,\n    pubTime,\n    content,\n    isTheLastInTheList,\n}) => {\n    const ref = useRef();\n\n    useEffect(() => {\n        // this code needs to be execute on each render to position it in the viewport in case old notes are loaded\n        isTheLastInTheList && ref.current.scrollIntoView();\n    });\n\n    return (\n        <div className={'note ' + (extraClassNamesSpaceSeparated || '')}>\n            <Avatar\n                altText={name}\n                extraClassNamesSpaceSeparated={'note-avatar'}\n                imageURL={photoUrl}\n                titleText={name}\n            />\n            <Label extraClassNamesSpaceSeparated={'note-label'}>{name}</Label>\n            <Timestamp extraClassNamesSpaceSeparated={'note-timestamp'}>\n                {pubDate + ' - ' + pubTime}\n            </Timestamp>\n            <BubbleText extraClassNamesSpaceSeparated={'note-bubble'}>{content}</BubbleText>\n            <div className='note-scrollref' ref={ref} />\n        </div>\n    );\n};\n\nexport default Notes;\n","import React, { useCallback, useEffect, useReducer } from 'react';\nimport { LOAD_NOTES_FROM_FETCH, ADD_NOTE } from '../../constants/actions';\nimport { CURRENT_USER_NAME, DATA_URL } from '../../constants/common';\nimport Reducer, { initialState } from '../../reducers/notes';\nimport { fetchRequest } from '../../utils/fetchRequest';\nimport logger from '../../utils/logger';\nimport InsertNote from './InsertNote';\nimport Note from '../elements/Note';\n\nimport './App.scss';\n\nconst App = () => {\n    const [{ orderedNotesIds, notesById }, dispatch] = useReducer(Reducer, initialState);\n\n    const addNoteCb = useCallback(\n        objNote => {\n            dispatch({\n                type: ADD_NOTE,\n                payload: {\n                    objNote,\n                },\n            });\n        },\n        [dispatch]\n    );\n\n    useEffect(() => {\n        fetchRequest(DATA_URL)\n            .then(result => {\n                // logger.log(result);\n                dispatch({\n                    type: LOAD_NOTES_FROM_FETCH,\n                    payload: {\n                        aNotes: result.slice(0),\n                    },\n                });\n            })\n            .catch(e => logger.error(e));\n    }, []);\n\n    return (\n        <div className='app'>\n            <section className='notes-list'>\n                {orderedNotesIds.map((noteId, index) => {\n                    const currentNote = notesById[noteId],\n                        isCurrentUser = currentNote.name === CURRENT_USER_NAME,\n                        isTheLastInTheList = index === orderedNotesIds.length - 1;\n\n                    return (\n                        <Note\n                            key={noteId}\n                            extraClassNamesSpaceSeparated={\n                                isCurrentUser ? 'note--right' : 'note--left'\n                            }\n                            name={currentNote.name}\n                            photoUrl={currentNote.photoUrl}\n                            pubDate={currentNote.pubDate}\n                            pubTime={currentNote.pubTime}\n                            content={currentNote.content}\n                            isTheLastInTheList={isTheLastInTheList}\n                        />\n                    );\n                })}\n            </section>\n            <InsertNote addNoteCb={addNoteCb} />\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './layout/containers/App';\n\nif (((window || {}).history || {}).scrollRestoration) {\n    window.history.scrollRestoration = 'manual';\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}